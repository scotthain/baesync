name: CI/CD Pipeline

on:
  push:
    branches: [ main, '**' ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install build pytest
        
    - name: Run tests
      run: |
        pytest
        
    - name: Build package
      run: |
        python -m build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  version-bump-and-release:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build bump2version
        
    - name: Configure Git
      run: |
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'
        
    - name: Bump version and update changelog
      run: |
        # Get the current version from setup.py
        CURRENT_VERSION=$(grep "version=" setup.py | cut -d'"' -f2)
        
        # Bump the patch version
        NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF++;print}')
        
        # Update setup.py with new version
        sed -i "s/version=\"$CURRENT_VERSION\"/version=\"$NEW_VERSION\"/" setup.py
        
        # Update CHANGELOG.md
        echo "## [$NEW_VERSION] - $(date +%Y-%m-%d)" > temp_changelog
        echo "" >> temp_changelog
        echo "### Changes" >> temp_changelog
        echo "" >> temp_changelog
        git log $(git describe --tags --abbrev=0 2>/dev/null || git rev-list --max-parents=0 HEAD)..HEAD --pretty=format:"- %s" >> temp_changelog
        echo "" >> temp_changelog
        cat CHANGELOG.md >> temp_changelog
        mv temp_changelog CHANGELOG.md
        
        # Commit changes
        git add setup.py CHANGELOG.md
        git commit -m "Bump version to $NEW_VERSION [skip ci]"
        git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
        git push origin main --tags
        
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.whl
          dist/*.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: false 